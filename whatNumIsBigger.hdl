
/**
 * Let A and B be two binary numbers (4 digits) in 2's complement
 * Let S=A-B 
 * 
 * The output should be:
 * eq = 1 if A=B
 * lt = 1 if A<B (there is no overflow and A-B<0) or (A<0 and B>=0)
 * gt = 1 if A>B (there is no overflow and A-B>0) or (A>=0 and B<0)
 *                Alternatively, A>B iff not(A=B or A<B)
 */

CHIP Ex2Q4 {
    IN A[4], B[4] ;
    OUT eq, gt, lt;

    PARTS:
    // Put your code here:
	AddSub(a=A,b=B, sel=true ,out=S,overflow=carry1);

	NXor(a=A[0],b=B[0],out=AB0);
	NXor(a=A[1],b=B[1],out=AB1);
	NXor(a=A[2],b=B[2],out=AB2);
	NXor(a=A[3],b=B[3],out=AB3);
	fourAnd(a=AB0,b=AB1,c=AB2,d=AB3,out=eq, out = eq1); 

	ArrayToNum4(a=S ,s0=s0,s1=s1, s2=s2,s3=s3);
	Not(in= carry1, out = Ncarry1);
	Not(in= s3, out = Ns3);
	Not(in= A[3], out = Na3);
	Not(in= B[3], out = Nb3);
	Not(in= eq1, out = Neq);


	fourAnd(a=Ncarry1, b=s3,c = Neq, d = true, out =c1);//theres no overflow and the res is negative. 
	fourAnd(a = carry1, b = A[3],c = Nb3, d = Neq, out = c2);// there is overflow and a<0 and b>=0.
	Or(a=c1, b=c2, out=lt );
	
	fourAnd(a=Ncarry1, b=Ns3,c = Neq, d = true, out =c3); 
	fourAnd(a = carry1, b = B[3], c =Na3, d = Neq ,  out = c4);
	Or(a=c3, b=c4, out=gt );
}
